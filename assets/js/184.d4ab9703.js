(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{1116:function(t,s,a){"use strict";a.r(s);var n=a(15),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"合理设置分片数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合理设置分片数"}},[t._v("#")]),t._v(" 合理设置分片数")]),t._v(" "),a("p",[t._v("分片和副本的设计为 ES 提供了支持分布式和故障转移的特性，但并不意味着分片和副本是可以无限分配的。而且索引的分片完成分配后由于索引的路由机制，是不能重新修改分片数的")]),t._v(" "),a("p",[t._v("可能有人会说，我不知道这个索引将来会变得多大，并且过后也不能更改索引的大小，所以为了保险起见，还是给它设为 1000 个分片。但是需要注意一个分片并不是没有代价的。需要了解：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一个分片的底层即为一个 Lucene 索引，会消耗一定文件句柄、内存、以及 CPU运转")])]),t._v(" "),a("li",[a("p",[t._v("每一个搜索请求都需要命中索引中的每一个分片，如果每一个分片都处于不同的节点还好， 但如果多个分片都需要在同一个节点上竞争使用相同的资源就有些糟糕了")])]),t._v(" "),a("li",[a("p",[t._v("用于计算相关度的词项统计信息是基于分片的。如果有许多分片，每一个都只有很少的数据会导致很低的相关度")])])]),t._v(" "),a("p",[t._v("一个业务索引具体需要分配多少分片可能需要架构师和技术人员对业务的增长有个预先的判断，横向扩展应当分阶段进行。为下一阶段准备好足够的资源。 只有当你进入到下一个阶段，你才有时间思考需要作出哪些改变来达到这个阶段。一般来说遵循一些原则：")]),t._v(" "),a("ul",[a("li",[t._v("控制每个分片占用的硬盘容量不超过 ES 的最大 JVM 的堆空间设置（"),a("strong",[t._v("一般设置不超过 32G")]),t._v("，参考下文的 JVM 设置原则），如果索引的总容量在 500G 左右，那分片大小在 16 个左右即可；当然，最好同时考虑原则 2。")]),t._v(" "),a("li",[t._v("考虑一下 node 数量，一般一个节点有时候就是一台物理机，如果分片数过多，大大超过了节点数，很可能会导致一个节点上存在多个分片，一旦该节点故障，即使保持了 1 个以上的副本，同样有可能会导致数据丢失，集群无法恢复\n"),a("ul",[a("li",[t._v("一般都设置分片数不超过节点数的 3 倍")])])]),t._v(" "),a("li",[t._v("主分片，副本和节点最大数之间数量，分配的时候可以参考以下关系：\n"),a("ul",[a("li",[t._v("节点数<=主分片数 *（副本数+1）")])])])]),t._v(" "),a("h2",{attrs:{id:"推迟分片分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推迟分片分配"}},[t._v("#")]),t._v(" 推迟分片分配")]),t._v(" "),a("p",[t._v("对于节点瞬时中断的问题，默认情况，集群会等待一分钟来查看节点是否会重新加入，如果这个节点在此期间重新加入，重新加入的节点会保持其现有的分片数据，不会触发新的分片分配。这样就可以减少 ES 在自动再平衡可用分片时所带来的极大开销。")]),t._v(" "),a("p",[t._v("通过修改参数 delayed_timeout ，可以延长再均衡的时间")]),t._v(" "),a("ul",[a("li",[t._v("可以全局设置")]),t._v(" "),a("li",[t._v("可以在索引级别进行修改")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("#PUT /_all/_settings\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"settings"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"index.unassigned.node_left.delayed_timeout"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5m"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);