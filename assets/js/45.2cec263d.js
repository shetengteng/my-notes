(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{1104:function(t,e,s){"use strict";s.r(e);var a=s(15),l=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("mget 和 bulk API 的模式类似于单文档模式，区别在于协调节点知道每个文档存在于哪个分片中。它将整个多文档请求分解成 每个分片 的多文档请求，并且将这些请求并行转发到每个参与节点。\n协调节点一旦收到来自每个节点的应答，就将每个节点的响应收集整理成单个响应，返回给客户端")]),t._v(" "),a("h2",{attrs:{id:"mget-请求步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mget-请求步骤"}},[t._v("#")]),t._v(" mget 请求步骤")]),t._v(" "),a("blockquote",[a("p",[t._v("用单个 mget  请求取回多个文档所需的步骤顺序")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(698),alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("客户端向 Node 1 发送 mget 请求")]),t._v(" "),a("li",[t._v("Node 1为每个分片构建多文档获取请求，然后并行转发这些请求到托管在每个所需的主分片或者副本分片的节点上")]),t._v(" "),a("li",[t._v("一旦收到所有答复，Node 1 构建响应并将其返回给客户端")])]),t._v(" "),a("p",[t._v("可以对docs数组中每个文档设置routing参数")]),t._v(" "),a("h2",{attrs:{id:"bulk-请求步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bulk-请求步骤"}},[t._v("#")]),t._v(" bulk 请求步骤")]),t._v(" "),a("blockquote",[a("p",[t._v("bulk API， 允许在单个批量请求中执行多个创建、索引、删除和更新请求")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(699),alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("客户端向Node 1 发送 bulk请求")]),t._v(" "),a("li",[t._v("Node 1为每个节点创建一个批量请求，并将这些请求并行转发到每个包含主分片的节点主机")]),t._v(" "),a("li",[t._v("主分片一个接一个按顺序执行每个操作。当每个操作成功时,主分片并行转发新文档（或删除）到副本分片，然后执行下一个操作")]),t._v(" "),a("li",[t._v("一旦所有的副本分片报告所有操作成功，该节点将向协调节点报告成功，协调节点将这些响应收集整理并返回给客户端")])])])}),[],!1,null,null,null);e.default=l.exports},698:function(t,e,s){t.exports=s.p+"assets/img/batch-update.31ef9a60.png"},699:function(t,e,s){t.exports=s.p+"assets/img/batch-update2.6a902542.png"}}]);