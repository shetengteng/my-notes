(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{1273:function(t,r,e){"use strict";e.r(r);var _=e(15),v=Object(_.a)({},(function(){var t=this,r=t.$createElement,_=t._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"发送原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#发送原理"}},[t._v("#")]),t._v(" 发送原理")]),t._v(" "),_("p",[t._v("// todo xxx")]),t._v(" "),_("p",[_("img",{attrs:{src:e(765),alt:""}})]),t._v(" "),_("p",[t._v("序列化器")]),t._v(" "),_("ul",[_("li",[t._v("kafka有自己的序列化器，而java的原生的序列化占用资源太多")])]),t._v(" "),_("p",[t._v("每个分区有一个双端队列")]),t._v(" "),_("ul",[_("li",[t._v("消息存储在双端队列中，如果达到了batch.size（默认16k）或者达到了数据的延时时间 linger.ms 则sender线程读取进行发送")])]),t._v(" "),_("p",[_("img",{attrs:{src:e(766),alt:""}})]),t._v(" "),_("p",[t._v("Sender将队列的消息按照Broker进行分组，形成多个NetworkClient，每个NetworkClient对应一个Broker")]),t._v(" "),_("ul",[_("li",[t._v("NetworkClient会为每个borker缓存5个请求，当NetworkClient发送第5个请求时，Borker依然没有回复，则暂停发送Request")])]),t._v(" "),_("p",[t._v("所有发送消息的IO操作由Selector进行处理")]),t._v(" "),_("p",[t._v("应答 ack 值的设置")]),t._v(" "),_("ul",[_("li",[t._v("0 生产者发送的数据，不需要等待数据落盘应答；不需要关心broker是否收到数据")]),t._v(" "),_("li",[t._v("1 生产者发送数据，Leader收到数据后应答；保证Leader收到数据")]),t._v(" "),_("li",[t._v("-1 (all) 生产者发送的数据，Leader和ISR队列里面的所有节点都收到数据后应答，-1和all等价；保证Leader和Follower都收到数据")])]),t._v(" "),_("p",[_("img",{attrs:{src:e(767),alt:""}})]),t._v(" "),_("p",[t._v("如果收到了成功的应答，那么会清理NetworkClient中的Request以及清理内存中分区双端队列中的消息的数据")]),t._v(" "),_("p",[_("img",{attrs:{src:e(568),alt:""}})]),t._v(" "),_("p",[t._v("如果失败则会进行重试，重试次数是Integer.MAX，直到重试成功为止")]),t._v(" "),_("h2",{attrs:{id:"重要参数列表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重要参数列表"}},[t._v("#")]),t._v(" 重要参数列表")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("参数名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("bootstrap.servers")]),t._v(" "),_("td",[t._v("生产者连接集群所需的 broker 地址清单。如 linux101:9092,linux102:9092,linux103:9092，可设置 1 个或者多个，中间用逗号隔开。注意这里并非需要所有的 broker 地址，因为生产者从给定的 broker里查找到其他 broker信息")])]),t._v(" "),_("tr",[_("td",[t._v("key.serializer和 value.serializer")]),t._v(" "),_("td",[t._v("指定发送消息的 key 和 value 的序列化类型"),_("br"),t._v("一定要写全类名")])]),t._v(" "),_("tr",[_("td",[t._v("buffer.memory")]),t._v(" "),_("td",[t._v("RecordAccumulator 缓冲区总大小，"),_("strong",[t._v("默认 32m")])])]),t._v(" "),_("tr",[_("td",[t._v("batch.size")]),t._v(" "),_("td",[t._v("缓冲区一批数据最大值，"),_("strong",[t._v("默认 16k")]),_("br"),t._v("适当增加该值，可以提高吞吐量，但是如果该值设置太大，会导致数据传输延迟增加")])]),t._v(" "),_("tr",[_("td",[t._v("linger.ms")]),t._v(" "),_("td",[t._v("如果数据迟迟未达到 batch.size，sender 等待 linger.time 之后就会发送数据"),_("br"),t._v("单位 ms，默认值是 0ms，表示没有延迟"),_("br"),t._v("生产环境建议该值大小为 5-100ms之间")])]),t._v(" "),_("tr",[_("td",[t._v("acks")]),t._v(" "),_("td",[t._v("0：生产者发送过来的数据，不需要等数据落盘应答"),_("br"),t._v("1：生产者发送过来的数据，Leader收到数据后应答"),_("br"),t._v("-1（all）：生产者发送过来的数据，Leader+和 isr 队列里面的所有节点收齐数据后应答。默认值是-1，-1 和 all是等价的")])]),t._v(" "),_("tr",[_("td",[t._v("max.in.flight.requests.per.connection")]),t._v(" "),_("td",[t._v("允许最多没有返回 ack 的次数，默认为 5，开启幂等性要保证该值是 1-5 的数字")])]),t._v(" "),_("tr",[_("td",[t._v("retries")]),t._v(" "),_("td",[t._v("当消息发送出现错误的时候，系统会重发消息"),_("br"),t._v("retries表示重试次数。默认是 int最大值，2147483647。"),_("br"),t._v("如果设置了重试，还想保证消息的有序性，需要设置MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION=1；否则在重试此失败消息的时候，其他的消息可能发送成功了")])]),t._v(" "),_("tr",[_("td",[t._v("retry.backoff.ms")]),t._v(" "),_("td",[t._v("两次重试之间的时间间隔，默认是 100ms")])]),t._v(" "),_("tr",[_("td",[t._v("enable.idempotence")]),t._v(" "),_("td",[t._v("是否开启幂等性，"),_("strong",[t._v("默认 true")]),t._v("，开启幂等性")])]),t._v(" "),_("tr",[_("td",[t._v("compression.type")]),t._v(" "),_("td",[t._v("生产者发送的所有数据的压缩方式"),_("br"),t._v("默认是 none，不压缩"),_("br"),t._v("支持压缩类型：none、gzip、snappy、lz4 和 zstd")])]),t._v(" "),_("tr",[_("td"),t._v(" "),_("td")])])])])}),[],!1,null,null,null);r.default=v.exports},568:function(t,r,e){t.exports=e.p+"assets/img/producer4.076c01aa.png"},765:function(t,r,e){t.exports=e.p+"assets/img/producer1.c7cb480a.png"},766:function(t,r,e){t.exports=e.p+"assets/img/producer2.5867848b.png"},767:function(t,r,e){t.exports=e.p+"assets/img/producer3.52baef1a.png"}}]);