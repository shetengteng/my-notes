(window.webpackJsonp=window.webpackJsonp||[]).push([[292],{1115:function(s,t,a){"use strict";a.r(t);var n=a(15),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[s._v("#")]),s._v(" 字面量")]),s._v(" "),a("ul",[a("li",[s._v("表达式最简单的形式就是字面量\n"),a("ul",[a("li",[s._v("字面量表示诸如字符串和数值的 Python对象。如“Hello World”")])])]),s._v(" "),a("li",[s._v("双引号或单引号中间的一切都是字符串")]),s._v(" "),a("li",[s._v("无论何时你需要在模板中使用一个字符串（比如函数调用、过滤器或只是包含或继承一个模板的参数）\n"),a("ul",[a("li",[s._v("如4242.23")])])]),s._v(" "),a("li",[s._v("数值可以为整数和浮点数\n"),a("ul",[a("li",[s._v("如果有小数点，则为浮点数，否则为整数")]),s._v(" "),a("li",[s._v("在Python 里， 42 和 42.0 是不一样的")])])])]),s._v(" "),a("h2",{attrs:{id:"算术运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术运算"}},[s._v("#")]),s._v(" 算术运算")]),s._v(" "),a("p",[s._v("Jinja 允许用计算值。这在模板中很少用到，但为了完整性允许其存在，支持如下运算符")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("+\n  把两个对象加到一起。\n  通常对象是数字，但是如果两者是字符串或列表，可用这种方式来衔接它们\n  无论如何这不是首选的连接字符串的方式！连接字符串见 ~ 运算符\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 等于 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n-\n  用第一个数减去第二个数\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 等于 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n/\n  对两个数做除法\n  返回值会是一个浮点数\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" / "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 等于 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n//\n  对两个数做除法\n  返回整数商\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" // "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 等于 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n%\n  计算整数除法的余数\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" % "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 等于 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n*\n  用右边的数乘左边的操作数\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 会返回 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" \n  可用于重复一个字符串多次\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" ‘"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("’ * "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 会打印 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" 个等号的横条\n**\n  取左操作数的右操作数次幂\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("**3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 会返回 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h2",{attrs:{id:"比较操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较操作符"}},[s._v("#")]),s._v(" 比较操作符")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("==")]),s._v(" "),a("ul",[a("li",[s._v("比较两个对象是否相等")])])]),s._v(" "),a("li",[a("code",[s._v("!=")]),s._v(" "),a("ul",[a("li",[s._v("比较两个对象是否不等")])])]),s._v(" "),a("li",[a("code",[s._v(">")]),s._v(" "),a("ul",[a("li",[s._v("如果左边大于右边，返回 true")])])]),s._v(" "),a("li",[a("code",[s._v(">=")]),s._v(" "),a("ul",[a("li",[s._v("如果左边大于等于右边，返回 true")])])]),s._v(" "),a("li",[a("code",[s._v("<")]),s._v(" "),a("ul",[a("li",[s._v("如果左边小于右边，返回 true")])])]),s._v(" "),a("li",[a("code",[s._v("<=")]),s._v(" "),a("ul",[a("li",[s._v("如果左边小于等于右边，返回 true")])])])]),s._v(" "),a("h2",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),a("p",[s._v("对于 if 语句，在 for 过滤或 if 表达式中，它可以用于联合多个表达式")]),s._v(" "),a("ul",[a("li",[s._v("and\n"),a("ul",[a("li",[s._v("如果左操作数和右操作数同为真，返回 true")])])]),s._v(" "),a("li",[s._v("or\n"),a("ul",[a("li",[s._v("如果左操作数和右操作数有一个为真，返回 true")])])]),s._v(" "),a("li",[s._v("not\n"),a("ul",[a("li",[s._v("对一个表达式取反")])])]),s._v(" "),a("li",[s._v("(expr)\n"),a("ul",[a("li",[s._v("表达式组")])])])]),s._v(" "),a("h2",{attrs:{id:"列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[s._v("#")]),s._v(" 列表")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("['list', 'of', 'objects']")])]),s._v(" "),a("li",[s._v("一对中括号括起来的东西是一个列表")]),s._v(" "),a("li",[s._v("列表用于存储和迭代序列化的数据")])]),s._v(" "),a("p",[s._v("示例：在 for循环中用列表和元组创建一个链接的列表")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("% "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" href, caption "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'index.html'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Index'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'about.html'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'About'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'downloads.html'")]),s._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Downloads'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" %"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("li"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{{ href }}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" caption "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/li"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("% endfor %"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/ul"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"元组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元组"}},[s._v("#")]),s._v(" 元组")]),s._v(" "),a("p",[s._v("元组通常用于表示两个或更多元素的项")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("('tuple', 'of', 'values')")])]),s._v(" "),a("li",[s._v("元组与列表类似，只是不能修改元组")]),s._v(" "),a("li",[s._v("如果元组中只有一个项，需要以逗号结尾它")])]),s._v(" "),a("h2",{attrs:{id:"字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[s._v("#")]),s._v(" 字典")]),s._v(" "),a("p",[s._v("Python 中的字典是一种关联键和值的结构")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("{'dict': 'of', 'key': 'and', 'value': 'pairs'}")])]),s._v(" "),a("li",[s._v("键必须是唯一的，并且键必须只有一个值")]),s._v(" "),a("li",[s._v("字典在模板中很少使用，罕用于诸如 xmlattr() 过滤器之类")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" / false:\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" 永远是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" ，而 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" 始终是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);